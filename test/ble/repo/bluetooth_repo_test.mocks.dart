// Mocks generated by Mockito 5.4.4 from annotations
// in code_challenge/test/ble/repo/bluetooth_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:code_challenge/service/bluetooth/bluetooth_interface.dart'
    as _i2;
import 'package:code_challenge/service/bluetooth/model/bluetooth_device_model.dart'
    as _i4;
import 'package:code_challenge/service/bluetooth/model/connection_state.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IBluetoothInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockIBluetoothInterface extends _i1.Mock
    implements _i2.IBluetoothInterface {
  MockIBluetoothInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> enableBluetooth() => (super.noSuchMethod(
        Invocation.method(
          #enableBluetooth,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> disableBluetooth() => (super.noSuchMethod(
        Invocation.method(
          #disableBluetooth,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Stream<bool> isEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isEnabled,
          [],
        ),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);

  @override
  _i3.Future<void> startScan() => (super.noSuchMethod(
        Invocation.method(
          #startScan,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stopScan() => (super.noSuchMethod(
        Invocation.method(
          #stopScan,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.BluetoothDeviceModel>> discoveredDevices() =>
      (super.noSuchMethod(
        Invocation.method(
          #discoveredDevices,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.BluetoothDeviceModel>>.empty(),
      ) as _i3.Stream<List<_i4.BluetoothDeviceModel>>);

  @override
  _i3.Future<bool> connect(String? deviceId) => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [deviceId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> disconnect(String? deviceId) => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [deviceId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<_i5.ConnectionState> connectionStateStream(String? deviceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectionStateStream,
          [deviceId],
        ),
        returnValue: _i3.Stream<_i5.ConnectionState>.empty(),
      ) as _i3.Stream<_i5.ConnectionState>);

  @override
  _i3.Future<List<_i4.BluetoothDeviceModel>> getSystemConnectedDevices() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSystemConnectedDevices,
          [],
        ),
        returnValue: _i3.Future<List<_i4.BluetoothDeviceModel>>.value(
            <_i4.BluetoothDeviceModel>[]),
      ) as _i3.Future<List<_i4.BluetoothDeviceModel>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
